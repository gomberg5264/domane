name: Client
on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/client.yml
      - client/**
  pull_request:
    paths:
      - .github/workflows/client.yml
      - client/**

defaults:
  run:
    working-directory: client

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "^15.8"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Download packages
        run: (yarn check --integrity && yarn check --verify-tree) || yarn install --frozen-lockfile --network-timeout 1000000
      
      - name: Format
        run: yarn run format

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "fix(client): code format"
          branch: ${{ github.head_ref }}

      - name: Build
        run: yarn build

      - name: Run tests
        run: yarn test:coverage

  deploy:
    name: Deploy
    needs: test
    timeout-minutes: 10

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_LOGIN_TOKEN }}

      - name: Build Docker Image
        run: docker build -t ghcr.io/kostaspt/domane-client:latest .

      - name: Push to Registry
        run: docker push ghcr.io/kostaspt/domane-client:latest

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DOMANE_SSH_HOST }}
          username: ${{ secrets.DOMANE_SSH_USER }}
          passphrase: ${{ secrets.DOMANE_SSH_PASSPHRASE }}
          key: ${{ secrets.DOMANE_SSH_PRIVATE_KEY}}
          script: cd /app && docker-compose pull client && docker-compose up -d --force-recreate client;
