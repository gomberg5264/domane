global
    maxconn     1024
    log         127.0.0.1    local0 notice
    log         127.0.0.1    local1 notice

defaults
    log         global
    option      httplog
    option      forwardfor
    option      redispatch
    retries     3
    timeout     connect 10s
    timeout     client  1m
    timeout     server  2m
    timeout     check   10s

frontend http_in
    mode            http
    bind            *:80

    compression     algo gzip
    compression     type text/html text/plain text/javascript application/javascript application/xml text/css

    acl             valid_host hdr(host) -i "${DOMAIN}"

    acl             is_metrics path -i -m end /metrics
    http-request    deny if is_metrics

    acl             is_api path -i -m beg /api
    use_backend     api_backend if valid_host is_api

    acl             is_prometheus path -i -m beg /prometheus
    use_backend     prometheus_backend if valid_host is_prometheus

    acl             is_grafana path -i -m beg /grafana
    use_backend     grafana_backend if valid_host is_grafana

    use_backend     client_backend if valid_host

    # Enable statistics
    stats           enable
    stats           uri /haproxy-stats
    stats           refresh 10s

backend api_backend
    mode            http
    http-request    set-path "%[path,regsub(^/api/,/)]"
    server          api api:${API_PORT} check

backend client_backend
    mode            http
    server          client client:${CLIENT_PORT} check

backend prometheus_backend
    mode            http
    server          prometheus prometheus:9090 check

backend grafana_backend
    mode            http
    http-request    set-path %[path,regsub(^/grafana/?,/)]
    server          grafana grafana:3000 check
