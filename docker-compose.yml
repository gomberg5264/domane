version: "3.8"

networks:
  internal:

volumes:
  grafana_data:
  prometheus_data:

services:
  proxy:
    image: haproxy:2.3-alpine
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./docker/proxy:/usr/local/etc/haproxy:ro
    environment:
      - DOMAIN=${DOMAIN:?}
      - CLIENT_PORT=${CLIENT_PORT:?}
      - API_PORT=${API_PORT:?}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:?}
    networks:
      - internal

  client:
    image: ghcr.io/kostaspt/domane-client:latest
    build: 
      context: ./client
      args:
        - DOMAIN=${DOMAIN:?}
    restart: unless-stopped
    environment:
      - DOMAIN=${DOMAIN:?}
      - NODE_ENV=production
      - CLIENT_PORT=${CLIENT_PORT:?}
    networks:
      - internal

  api:
    image: ghcr.io/kostaspt/domane-api:latest
    build: ./api
    restart: unless-stopped
    environment:
      - DOMAIN=${DOMAIN:?}
      - API_PORT=${API_PORT:?}
    networks:
      - internal

  prometheus:
    image: prom/prometheus:v2.26.0
    restart: unless-stopped
    volumes:
      - prometheus_data:/prometheus
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - internal

  grafana:
    image: grafana/grafana:7.5.2
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/custom.ini:/etc/grafana/grafana.ini
    networks:
      - internal
